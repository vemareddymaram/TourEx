rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{document} {
      allow create: if request.auth.uid == request.resource.data.uid;
      allow read: if request.auth.uid == resource.data.uid;
      allow write: if request.auth.uid == resource.data.uid;
      allow delete: if false;
    }

    match /app_review/{document} {
      allow create: if request.resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if false;
      allow delete: if false;
    }

    match /comments/{document} {
      allow create: if request.resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if false;
      allow delete: if false;
    }

    match /favorites/{document} {
      allow create: if request.resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if false;
      allow delete: if false;
    }

    match /hotels/{document} {
      allow create: if request.auth.uid == request.resource.data.hotel_id;
      allow read: if request.auth.uid == resource.data.hotel_id;
      allow write: if false;
      allow delete: if false;
    }

    match /like_n_dislike/{document} {
      allow create: if request.resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if false;
      allow delete: if false;
    }

    match /places/{document} {
      allow create: if request.auth.uid == request.resource.data.place_id;
      allow read: if request.auth.uid == resource.data.place_id;
      allow write: if false;
      allow delete: if false;
    }

    match /ratings_n_reviews/{document} {
      allow create: if request.resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if false;
      allow delete: if false;
    }

    match /restaurants/{document} {
      allow create: if request.auth.uid == request.resource.data.restaurant_id;
      allow read: if request.auth.uid == resource.data.restaurant_id;
      allow write: if false;
      allow delete: if false;
    }

    match /tours/{document} {
      allow create: if request.resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow delete: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
    }

    match /tourList/{document} {
      allow create: if request.auth.uid == request.resource.data.tour_list_id;
      allow read: if request.auth.uid == resource.data.tour_list_id;
      allow write: if false;
      allow delete: if false;
    }

    match /users_at_same_location/{document} {
      allow create: if request.resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow read: if resource.data.uid == /databases/$(database)/documents/users/$(request.auth.uid);
      allow write: if false;
      allow delete: if false;
    }

    match /weather/{document} {
      allow create: if request.auth.uid == request.resource.data.weather_id;
      allow read: if request.auth.uid == resource.data.weather_id;
      allow write: if false;
      allow delete: if false;
    }
  }
}
